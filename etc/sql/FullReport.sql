--
-- Drop all views and data marts
--
DROP VIEW V_FULL_EXPORT@
DROP VIEW V_FULL_EXPORT_GW@
DROP VIEW V_MOTORS_FILTERS_GROUPED@
DROP VIEW V_MOTORS_FILTERS_GROUPED_GW@
DROP VIEW V_MOTORS_FILTERS@
DROP VIEW V_MOTORS_FILTERS_GW@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT1@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT2@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT3@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT4@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT1_GW@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT2_GW@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT3_GW@
DROP VIEW V_MOTORS_FILTERS_GLOBAL_VT4_GW@
DROP TABLE IF EXISTS DM_FILTERS_TYPES_FORMS@
-------------------------------------------------------

--
--	Create data mart
--
CREATE TABLE DM_FILTERS_TYPES_FORMS(
	FILTER_ID BIGINT NOT NULL,
	
	FILTER_APPLYTOALL_VT1 INTEGER NOT NULL,
	FILTER_APPLYTOALL_VT2 INTEGER NOT NULL,
	FILTER_APPLYTOALL_VT3 INTEGER NOT NULL,
	FILTER_APPLYTOALL_VT4 INTEGER NOT NULL,
	
	FITLER_TYPE_ID BIGINT NOT NULL,
	FILTER_TYPE_CODE VARCHAR(255) NOT NULL,
	FILTER_TYPE_NAME VARCHAR(255) NOT NULL,
	
	FILTER_FORM_ID BIGINT NOT NULL,
	FILTER_FORM_NAME VARCHAR(255) NOT NULL,
	
	FILTER_NAME VARCHAR(255) NOT NULL,
	ONSITE BOOLEAN(1),
	
	PRIMARY KEY(FILTER_ID))@
	
--
--	Creates indices for data mart
--
CREATE INDEX IDX_DFTF_FAVT1 ON DM_FILTERS_TYPES_FORMS(FILTER_APPLYTOALL_VT1)@
CREATE INDEX IDX_DFTF_FAVT2 ON DM_FILTERS_TYPES_FORMS(FILTER_APPLYTOALL_VT2)@
CREATE INDEX IDX_DFTF_FAVT3 ON DM_FILTERS_TYPES_FORMS(FILTER_APPLYTOALL_VT3)@
CREATE INDEX IDX_DFTF_FAVT4 ON DM_FILTERS_TYPES_FORMS(FILTER_APPLYTOALL_VT4)@
	
--
--	Redbuild data mart
--
DELETE FROM DM_FILTERS_TYPES_FORMS@
INSERT INTO DM_FILTERS_TYPES_FORMS (
	FILTER_ID,	
	FILTER_APPLYTOALL_VT1,
	FILTER_APPLYTOALL_VT2,
	FILTER_APPLYTOALL_VT3,
	FILTER_APPLYTOALL_VT4,
	FITLER_TYPE_ID,
	FILTER_TYPE_CODE,
	FILTER_TYPE_NAME,	
	FILTER_FORM_ID,
	FILTER_FORM_NAME,	
	FILTER_NAME,
	ONSITE)
SELECT
	f.ID as FILTER_ID,
	
	CASE WHEN f.APPLYTOALL_VT1 = 1 THEN 1 ELSE 0 END as FILTER_APPLYTOALL_VT1,
	CASE WHEN f.APPLYTOALL_VT2 = 1 THEN 2 ELSE 0 END as FILTER_APPLYTOALL_VT2,
	CASE WHEN f.APPLYTOALL_VT3 = 1 THEN 3 ELSE 0 END as FILTER_APPLYTOALL_VT3,
	CASE WHEN f.APPLYTOALL_VT4 = 1 THEN 4 ELSE 0 END as FILTER_APPLYTOALL_VT4,
	
	--	Тип фильтра
	ft.ID as FILTER_TYPE_ID,
	ft.CODE as FILTER_TYPE_CODE,
	ft.NAME as FILTER_TYPE_NAME,
	
	--	Форма фильтра
	ff.ID as FILTER_FORM_ID,
	ff.NAME as FILTER_FORM_NAME,
	
	-- Фильтр
	f.NAME as FILTER_NAME,
	
	f.ONSITE as ONSITE
	
FROM FILTER f
LEFT OUTER JOIN FILTERTYPE ft ON f.FILTERTYPECODE = ft.CODE
LEFT OUTER JOIN FILTERFORM ff ON f.FILTERFORMID = ff.ID
WHERE ft.ID IS NOT NULL AND ff.ID IS NOT NULL@


--
--  Фильтры в привязке к моторам
--

--
--	Витрины глобальной привязки к моторам
--
CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT1 AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT1
WHERE dm_ftf.FILTER_ID IS NOT NULL@

CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT2 AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT2
WHERE dm_ftf.FILTER_ID IS NOT NULL@

CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT3 AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT3
WHERE dm_ftf.FILTER_ID IS NOT NULL@

CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT4 AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT4
WHERE dm_ftf.FILTER_ID IS NOT NULL@

--
--	Глобальная привязка GW
--
CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT1_GW AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT1
WHERE dm_ftf.FILTER_ID IS NOT NULL AND dm_ftf.ONSITE = 1@

CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT2_GW AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT2
WHERE dm_ftf.FILTER_ID IS NOT NULL AND dm_ftf.ONSITE = 1@

CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT3_GW AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT3
WHERE dm_ftf.FILTER_ID IS NOT NULL AND dm_ftf.ONSITE = 1@

CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GLOBAL_VT4_GW AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN SERIA t_s ON t_s.ID = m.SERIAID
LEFT OUTER JOIN MANUFACTOR t_m on t_m.ID = t_s.MANUFACTORID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON  t_m.VECHICLETYPEID = dm_ftf.FILTER_APPLYTOALL_VT4
WHERE dm_ftf.FILTER_ID IS NOT NULL AND dm_ftf.ONSITE = 1@


--
--	Основная витрина
--
CREATE OR REPLACE VIEW V_MOTORS_FILTERS AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN FILTERSANDMOTORS fam ON fam.MOTORID = m.ID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON dm_ftf.FILTER_ID = fam.FILTERID
WHERE dm_ftf.FILTER_ID IS NOT NULL
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT1
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT2
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT3
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT4@

--
--	Основная витрина (Goodwill only)
--
CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GW AS
SELECT 
	m.ID as MOTOR_ID, 
	dm_ftf.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	dm_ftf.FILTER_NAME as FILTER_NAME
FROM MOTOR m
LEFT OUTER JOIN FILTERSANDMOTORS fam ON fam.MOTORID = m.ID
LEFT OUTER JOIN DM_FILTERS_TYPES_FORMS dm_ftf ON dm_ftf.FILTER_ID = fam.FILTERID
WHERE dm_ftf.FILTER_ID IS NOT NULL AND
      dm_ftf.ONSITE = 1
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT1_GW
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT2_GW
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT3_GW
UNION SELECT * FROM V_MOTORS_FILTERS_GLOBAL_VT4_GW@

--
--	Фильтры в привязке к моторам с группировкой
--
DROP VIEW V_MOTORS_FILTERS_GROUPED@
CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GROUPED AS
SELECT 
	vmt.MOTOR_ID as MOTOR_ID,
	vmt.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	GROUP_CONCAT(DISTINCT FILTER_NAME SEPARATOR ',') as FILTERS
FROM V_MOTORS_FILTERS vmt
GROUP BY vmt.MOTOR_ID, vmt.FILTER_TYPE_CODE@

--
--	Фильтры в привязке к моторам с группировкой (Goodwill only)
--
CREATE OR REPLACE VIEW V_MOTORS_FILTERS_GROUPED_GW AS
SELECT 
	vmt.MOTOR_ID as MOTOR_ID,
	vmt.FILTER_TYPE_CODE as FILTER_TYPE_CODE,
	GROUP_CONCAT(DISTINCT FILTER_NAME SEPARATOR ',') as FILTERS
FROM V_MOTORS_FILTERS_GW vmt
GROUP BY vmt.MOTOR_ID, vmt.FILTER_TYPE_CODE@

--
--	Итоговая витрина
--
DROP VIEW V_FULL_EXPORT@
CREATE OR REPLACE VIEW V_FULL_EXPORT AS
SELECT 
	vt.ID as VECHICLETYPE_ID,
	vt.NAME as VECHICLETYPE_NAME,
	
	m.ID as MANUFACTOR_ID,
	m.NAME as MANUFACTOR_NAME,
	
	s.ID as SERIA_ID,
	s.NAME as SERIA_NAME,
	
	mt.ID as MOTOR_ID,
	mt.NAME as MOTOR_NAME,
	
	mt.ENGINE as ENGINE_NAME,
	mt.KW as KW,
	mt.HP as HP,
	FORMATDATETIME(mt.DATEF, 'dd.MM.yyyy') as DATEF,
	FORMATDATETIME(mt.DATET, 'dd.MM.yyyy') as DATET,
	
	vmfg.FILTER_TYPE_CODE as FILTER_TYPE,
	vmfg.FILTERS as FILTERS
FROM
	VECHICLETYPE vt
	LEFT OUTER JOIN MANUFACTOR m ON m.VECHICLETYPEID = vt.ID
	LEFT OUTER JOIN SERIA s ON s.MANUFACTORID = m.ID
	LEFT OUTER JOIN MOTOR mt ON mt.SERIAID = s.ID
	LEFT OUTER JOIN V_MOTORS_FILTERS_GROUPED vmfg ON vmfg.MOTOR_ID = mt.ID
@

--
--	Итоговая витрина (Goodwill only)
--
CREATE OR REPLACE VIEW V_FULL_EXPORT_GW AS
SELECT 
	vt.ID as VECHICLETYPE_ID,
	vt.NAME as VECHICLETYPE_NAME,
	
	m.ID as MANUFACTOR_ID,
	m.NAME as MANUFACTOR_NAME,
	
	s.ID as SERIA_ID,
	s.NAME as SERIA_NAME,
	
	mt.ID as MOTOR_ID,
	mt.NAME as MOTOR_NAME,
	
	mt.ENGINE as ENGINE_NAME,
	mt.KW as KW,
	mt.HP as HP,
	FORMATDATETIME(mt.DATEF, 'dd.MM.yyyy') as DATEF,
	FORMATDATETIME(mt.DATET, 'dd.MM.yyyy') as DATET,
	
	vmfg.FILTER_TYPE_CODE as FILTER_TYPE,
	vmfg.FILTERS as FILTERS
FROM
	VECHICLETYPE vt
	LEFT OUTER JOIN MANUFACTOR m ON m.VECHICLETYPEID = vt.ID
	LEFT OUTER JOIN SERIA s ON s.MANUFACTORID = m.ID
	LEFT OUTER JOIN MOTOR mt ON mt.SERIAID = s.ID
	LEFT OUTER JOIN V_MOTORS_FILTERS_GROUPED_GW vmfg ON vmfg.MOTOR_ID = mt.ID
@

--	Проверим итоговую витрину
SELECT * FROM V_FULL_EXPORT WHERE 1=1@
